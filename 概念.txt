java中的分布式：一个项目部署成多个相关联的服务，这些服务可以放在同一台服务器上，也可以放在不同的服务器上。

并发性：简单的说就是系统中多个用户在同一时间执行同一个操作；
       并发程序中：基本执行单元：进程和线程
		进程：被看做是程序或应用程序的同义词
		    线程：线程是存在于进程中的，每个进程中至少有一个线程，线程被看作是轻量			 	  级的进程
		    多线程：一个程序（进程）在运行中产生了多个线程（不止一个线程）	

public class methodsName extends 类A（）{ } //类methodsName 继承类A

public class methoodsName implements 接口A ( ){ } //类methoodsName 实现接口A

接口：对实现方法的封装，接口可以认为是实现方法的方法名

(function(m){

 })(window)

等价于 var func=function(m){};func(window);

对象的三个属性：原型、类、可扩展性

序列化对象：serialization,就是将对象转化成字符串，
eg: var gg = {x:1,y,y}; var str = JSON.stringify(gg);typeof(str)==string为true


HashMap :是线程不安全的，但是ConcurrentHashMap是线程安全的(SynchronizedMap、HashTable等也是线程安全的)，

局部变量是在堆栈中运行的，每个线程都有自己的堆栈，因此访问局部变量是线程安全的；
全局变量是在堆中，堆中是对所有线程可见的，所以说不是线程安全的；
静态变量和实例变量是线程不安全的；

堆栈：   堆内存:存放由new定义的（java）对象和数组，在对中存放的内存，由java虚拟机的自动垃圾	 回收器来管理；
	 栈内存：函数中定义的一些基本类型的变量和对象的引用变量都是在栈内分配的，超过作用域	         之后就会自动释放内存；

处理线程安全问题：1 同步锁（Synchronized）,以时间换空间，分成n个小时间段依次执行；
		  2 ThreadLocal,以空间换时间，为每一个线程提供变量的副本，使得每一个线程在                      相同的时间访问到的并不是同一个对象;



